---
- name: Install required packages
  apt:
    name:
    - language-pack-en
    - software-properties-common
    - haveged
    - curl
    - python-apt
    - python-dev
    - python-setuptools
    - python-pip
    - python3-dev
    - python-wheel
    - python3-wheel
    - openjdk-8-jdk
    update_cache: true
    state: present

- name: set version of java to use
  file:
    src: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
    dest: /etc/alternatives/java
    state: link
  notify: restart bigbluebutton

- import_tasks: locale.yml

- name: add BigBlueButton apt key
  apt_key:
    url: http://ubuntu.bigbluebutton.org/bigbluebutton.asc
    id: '{{ bbb_apt_key }}'
    state: present

- name: add multiverse apt repositories
  apt_repository: repo={{ item }} state=present
  with_items:
    - "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release | lower }} multiverse"
    - "deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release | lower }} multiverse"
    - "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release | lower }}-updates multiverse"
    - "deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release | lower }}-updates multiverse"

- name: add mongodb apt key
  apt_key:
    url: "https://www.mongodb.org/static/pgp/server-{{ mongodb_version | default('3.4') }}.asc"
    state: present

- name: add bigbluebutton apt key
  apt_key:
    url: https://ubuntu.bigbluebutton.org/repo/bigbluebutton.asc
    state: present

- name: add Xenial dependency apt repositories
  apt_repository: repo={{ item }} state=present
  with_items:
    - ppa:bigbluebutton/support
    - ppa:rmescandon/yq
  when: ansible_distribution_release == 'xenial'

- name: add dependency apt repositories
  apt_repository: repo={{ item }} state=present
  with_items:
    - "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu {{ ansible_distribution_release | lower }}/mongodb-org/{{ mongodb_version | default('3.4') }} multiverse"
    - "deb https://ubuntu.bigbluebutton.org/xenial-22/ bigbluebutton-xenial main"
    - "ppa:nginx/stable"

- name: Ensure nginx from ppa is pinned
  copy:
    content: |
      Package: *
      Pin: release n=xenial,o=LP-PPA-nginx-stable
      Pin-Priority: 1000
    dest: /etc/apt/preferences.d/ppa-nginx
    mode: 0755

- name: install bbb and dependencies
  apt:
    name:
    - nginx
    - mongodb-org
    - bbb-check
    - bbb-html5
    - bigbluebutton
    state: present

# nojournal not supported for default engine
# inMemory engine seems only in Enterprise distribution
- debug: var=mongodb_version
- name: Ensure mongodb4+ does not use nojournal - systemd
  replace:
    dest: /etc/systemd/system/mongod.service
    regexp: ' --nojournal$'
    replace: ''
    backup: yes
  when: mongodb_version is defined and mongodb_version|string == '4.2'
  notify:
    - reload systemd
    - restart mongo

- name: Ensure mongodb4+ does not use nojournal - config
  template:
    src: mongo4-ramdisk.conf.j2
    dest: /usr/share/meteor/bundle/mongo-ramdisk.conf
    backup: yes
    mode: '0644'
  notify:
    - restart mongo
  when: mongodb_version is defined and mongodb_version|string == '4.2'

- name: LXD | disable freeswitch scheduling options
  replace:
    dest: /lib/systemd/system/freeswitch.service
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
    backup: yes
    mode: '0644'
  with_items:
    - { re: '^IOSchedulingClass=realtime', rep: '#IOSchedulingClass=realtime' }
    - { re: '^CPUSchedulingPolicy=rr', rep: '#CPUSchedulingPolicy=rr' }
  notify:
    - reload systemd

- meta: flush_handlers

- name: Ensure services are enabled
  service:
    name: mongod
    enabled: true
    state: started

- name: Check if bbb_ssl_cert exists
  stat:
    path: "{{ bbb_ssl_cert }}"
  register: bbbcert

- import_tasks: letsencrypt.yml
  when: bbb_letsencrypt_enable and not bbbcert.stat.exists

- import_tasks: certificate-selfsigned.yml
  when: not bbb_letsencrypt_enable and not bbbcert.stat.exists

- import_tasks: config.yml

- import_tasks: coturn.yml
  when: bbb_coturn_enable

- import_tasks: greenlight.yml
  when: bbb_greenlight_enable
